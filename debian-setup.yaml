---
- name: Setup my debian environment
  hosts: localhost
  connection: local
  tasks:
    - name: Install basic dependencies
      become: yes
      apt:
        update_cache: yes
        name:
          - build-essential
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - curl
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libxml2-dev
          - libxmlsec1-dev
          - libffi-dev
          - liblzma-dev
          - git
        state: present
      tags:
        - basics

    - name: Ensure .bashrc is sourced in .bash_profile
      blockinfile:
        path: ~/.bash_profile
        block: |
          # Source .bashrc if it exists
          if [ -f ~/.bashrc ]; then
              . ~/.bashrc
          fi
        create: yes # Create .bash_profile if it doesn't exist
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR BASHRC SOURCING"
      tags:
        - basics

    - name: Install pyenv
      shell: curl https://pyenv.run | bash
      tags:
        - pyenv

    - name: Add pyenv settings to bashrc
      blockinfile:
        path: ~/.bashrc
        block: |
          export PYENV_ROOT="$HOME/.pyenv"
          command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
        create: yes # Create file if it doesn't exist
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR PYENV"
      tags:
        - pyenv

    - name: Install Python 3.11.1 using pyenv
      shell: |
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        pyenv install 3.11.1
      args:
        executable: /bin/bash
      tags:
        - pyenv

    - name: Set Python 3.11.1 as global Python version
      shell: |
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        pyenv global 3.11.1
      args:
        executable: /bin/bash
      tags:
        - pyenv

    - name: Download and install Poetry
      shell: curl -sSL https://install.python-poetry.org | python3 -
      tags:
        - poetry

    - name: Add Poetry settings to bashrc
      blockinfile:
        path: ~/.bashrc
        block: |
          export PATH="$HOME/.local/bin:$PATH"
        create: yes # Create file if it doesn't exist
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR POETRY"
      tags:
        - poetry

    - name: Install mambaforge
      shell: curl -LJO "https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh" && bash Mambaforge-$(uname)-$(uname -m).sh -b && rm Mambaforge-$(uname)-$(uname -m).sh
      tags:
        - mamba

    - name: Add conda settings to bashrc
      blockinfile:
        path: ~/.bashrc
        block: |
          export PATH="$PATH:$HOME/mambaforge/bin"
          # Prevent base environment activation
          conda config --set auto_activate_base false
        create: yes # Create file if it doesn't exist
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR CONDA/MAMBA"
      tags:
        - mamba